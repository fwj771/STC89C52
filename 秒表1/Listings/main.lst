C51 COMPILER V9.54   MAIN                                                                  10/02/2025 17:09:05 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil\Keil5 C51\C51\BIN\C51.EXE main.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\main.
                    -lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "LCD1602.h"
   3          
   4          // 时间变量
   5          unsigned char hour = 0;
   6          unsigned char minute = 0;
   7          unsigned char second = 0;
   8          unsigned int ms = 0; 
   9          
  10          // 控制标志
  11          volatile bit updateDisplay = 0;
  12          bit isRunning = 1;
  13          
  14          // 显示缓冲区和历史记录
  15          unsigned char displayBuffer[6] = {0};
  16          unsigned char lastDisplay[6] = {0xFF}; // 初始化为不可能的值
  17          
  18          // 按键定义
  19          sbit KEY_STARTSTOP = P3^1;
  20          sbit KEY_RESET = P3^0;
  21          
  22          void DelayMs(unsigned int ms) {
  23   1          unsigned int i, j;
  24   1          for(i = 0; i < ms; i++)
  25   1              for(j = 0; j < 120; j++);  // 12MHz下的经验值
  26   1      }
  27          
  28          void Timer0_Isr(void) interrupt 1
  29          {
  30   1          TL0 = 0x18;        // 重装初值(1ms@12MHz)
  31   1          TH0 = 0xFC;
  32   1          
  33   1          if(isRunning && ++ms >= 1000)   // 1000ms=1s
  34   1          {
  35   2              ms = 0;
  36   2              if(++second >= 60)
  37   2              {
  38   3                  second = 0;
  39   3                  if(++minute >= 60)
  40   3                  {
  41   4                      minute = 0;
  42   4                      if(++hour >= 24)
  43   4                      {
  44   5                          hour = 0;
  45   5                      }
  46   4                  }
  47   3              }
  48   2              
  49   2              // 更新显示缓冲区
  50   2              displayBuffer[0] = hour / 10;
  51   2              displayBuffer[1] = hour % 10;
  52   2              displayBuffer[2] = minute / 10;
  53   2              displayBuffer[3] = minute % 10;
  54   2              displayBuffer[4] = second / 10;
C51 COMPILER V9.54   MAIN                                                                  10/02/2025 17:09:05 PAGE 2   

  55   2              displayBuffer[5] = second % 10;
  56   2              
  57   2              updateDisplay = 1;
  58   2          }
  59   1      }
  60          
  61          void Timer0_Init(void)
  62          {
  63   1        TMOD &= 0xF0;     //设置定时器模式
  64   1        TMOD |= 0x01;     //设置定时器模式
  65   1        TL0 = 0x18;       //设置定时初始值
  66   1        TH0 = 0xFC;       //设置定时初始值
  67   1        TF0 = 0;        //清除TF0标志
  68   1        TR0 = 1;        //定时器0开始计时
  69   1        
  70   1        ET0=1;
  71   1        EA=1;
  72   1        PT0=0;
  73   1      }
  74          
  75          void LCD_UpdateDisplay(bit forceUpdate)
  76          {
  77   1          // 固定文本部分只需要初始化时显示一次
  78   1          static bit firstRun = 1;
  79   1          unsigned char i = 0;
  80   1      
  81   1          if(firstRun) {
  82   2              LCD_ShowString(1, 1, "TIME:");
  83   2              LCD_ShowString(1, 8, "H ");
  84   2              LCD_ShowString(1, 12, "M ");
  85   2              LCD_ShowString(1, 16, "S");      
  86   2              LCD_ShowString(2, 1, "Running ");
  87   2              firstRun = 0;
  88   2          }
  89   1          
  90   1          // 数字部分更新
  91   1          if(forceUpdate) {
  92   2              // 强制更新所有数字
  93   2              LCD_ShowNum(1, 6, displayBuffer[0], 1);
  94   2              LCD_ShowNum(1, 7, displayBuffer[1], 1);
  95   2              LCD_ShowNum(1, 10, displayBuffer[2], 1);
  96   2              LCD_ShowNum(1, 11, displayBuffer[3], 1);
  97   2              LCD_ShowNum(1, 14, displayBuffer[4], 1);
  98   2              LCD_ShowNum(1, 15, displayBuffer[5], 1);
  99   2          } else {
 100   2              // 仅更新变化的数字
 101   2              if(displayBuffer[0] != lastDisplay[0]) LCD_ShowNum(1, 6, displayBuffer[0], 1);
 102   2              if(displayBuffer[1] != lastDisplay[1]) LCD_ShowNum(1, 7, displayBuffer[1], 1);
 103   2              if(displayBuffer[2] != lastDisplay[2]) LCD_ShowNum(1, 10, displayBuffer[2], 1);
 104   2              if(displayBuffer[3] != lastDisplay[3]) LCD_ShowNum(1, 11, displayBuffer[3], 1);
 105   2              if(displayBuffer[4] != lastDisplay[4]) LCD_ShowNum(1, 14, displayBuffer[4], 1);
 106   2              if(displayBuffer[5] != lastDisplay[5]) LCD_ShowNum(1, 15, displayBuffer[5], 1);
 107   2          }    
 108   1          if(isRunning) {
 109   2              LCD_ShowString(2, 1, "Running ");
 110   2          } else {
 111   2              LCD_ShowString(2, 1, "Stopped ");
 112   2          }
 113   1          // 保存当前显示值
 114   1          for(i = 0; i < 6; i++) {
 115   2              lastDisplay[i] = displayBuffer[i];
 116   2          }
C51 COMPILER V9.54   MAIN                                                                  10/02/2025 17:09:05 PAGE 3   

 117   1      }
 118          void KeyScan()
 119          {
 120   1        static bit keyLock = 0;
 121   1        if(KEY_STARTSTOP == 0 && !keyLock)
 122   1        {
 123   2          DelayMs(20);  // 消抖延时
 124   2          if(KEY_STARTSTOP == 0)  // 确认有效按键
 125   2          { 
 126   3            isRunning = !isRunning;
 127   3            updateDisplay = 1;
 128   3            keyLock = 1;  // 锁定按键
 129   3          }    
 130   2        }
 131   1        else if(KEY_STARTSTOP == 1)
 132   1        {
 133   2          keyLock = 0;  // 按键释放后解锁
 134   2        }
 135   1        
 136   1        if(KEY_RESET == 0)
 137   1        {
 138   2          DelayMs(20);
 139   2          if(KEY_RESET == 0) 
 140   2          {
 141   3             EA = 0;  // 关闭中断
 142   3             hour = minute = second = ms = 0;
 143   3             displayBuffer[0] = displayBuffer[1] = 0;
 144   3             displayBuffer[2] = displayBuffer[3] = 0;
 145   3             displayBuffer[4] = displayBuffer[5] = 0;
 146   3             isRunning = 1;
 147   3             LCD_UpdateDisplay(1);  // 强制更新
 148   3             EA = 1;  // 开启中断
 149   3            while(KEY_RESET == 0);  // 等待按键释放
 150   3          }
 151   2        }
 152   1        
 153   1      }
 154          void main()
 155          {
 156   1          // 初始化
 157   1          Timer0_Init();
 158   1          LCD_Init();
 159   1          
 160   1          // 初始显示（与更新格式完全一致）
 161   1          LCD_UpdateDisplay(1);  // 强制完整显示     
 162   1          while(1)
 163   1          {
 164   2            KeyScan();
 165   2            if(updateDisplay)
 166   2            {
 167   3              updateDisplay = 0;
 168   3              LCD_UpdateDisplay(0);
 169   3            }      
 170   2          }
 171   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    621    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  10/02/2025 17:09:05 PAGE 4   

   DATA SIZE        =     17       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
