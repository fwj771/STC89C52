C51 COMPILER V9.54   MATRIXKEY                                                             10/12/2025 21:30:40 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MATRIXKEY
OBJECT MODULE PLACED IN .\Objects\MatrixKey.obj
COMPILER INVOKED BY: D:\Keil\Keil5 C51\C51\BIN\C51.EXE MatrixKey.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\Listings\
                    -MatrixKey.lst) TABS(2) OBJECT(.\Objects\MatrixKey.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "DelayMs.h"
   3          
   4          // 矩阵键盘引脚定义
   5          sbit ROW1 = P1^7;
   6          sbit ROW2 = P1^6;
   7          sbit ROW3 = P1^5;
   8          sbit ROW4 = P1^4;
   9          sbit COL1 = P1^3;
  10          sbit COL2 = P1^2;
  11          sbit COL3 = P1^1;
  12          sbit COL4 = P1^0;
  13          
  14          // 键盘映射（4x4 矩阵）
  15          unsigned char code KeyMap[4][4] = {
  16              {0, 1, 2, 3},
  17              {4, 5, 6, 7},
  18              {8, 9, 10, 11},
  19              {12, 13, 14, 15}
  20          };
  21          
  22          void MatrixKey_Init()
  23          {
  24   1          // 初始化所有行为高电平，列为高阻态
  25   1          P1 = 0xFF;
  26   1      }
  27          
  28          unsigned char MatrixKey_Scan()
  29          {
  30   1          // 扫描第一列（COL1=0）
  31   1          COL1 = 0; COL2 = 1; COL3 = 1; COL4 = 1;
  32   1          if (ROW1 == 0) { DelayMs(5); if (ROW1 == 0) { while (ROW1 == 0); return KeyMap[0][0]; } }
  33   1          if (ROW2 == 0) { DelayMs(5); if (ROW2 == 0) { while (ROW2 == 0); return KeyMap[1][0]; } }
  34   1          if (ROW3 == 0) { DelayMs(5); if (ROW3 == 0) { while (ROW3 == 0); return KeyMap[2][0]; } }
  35   1          if (ROW4 == 0) { DelayMs(5); if (ROW4 == 0) { while (ROW4 == 0); return KeyMap[3][0]; } }
  36   1          
  37   1          // 扫描第二列（COL2=0）
  38   1          COL1 = 1; COL2 = 0; COL3 = 1; COL4 = 1;
  39   1          if (ROW1 == 0) { DelayMs(5); if (ROW1 == 0) { while (ROW1 == 0); return KeyMap[0][1]; } }
  40   1          if (ROW2 == 0) { DelayMs(5); if (ROW2 == 0) { while (ROW2 == 0); return KeyMap[1][1]; } }
  41   1          if (ROW3 == 0) { DelayMs(5); if (ROW3 == 0) { while (ROW3 == 0); return KeyMap[2][1]; } }
  42   1          if (ROW4 == 0) { DelayMs(5); if (ROW4 == 0) { while (ROW4 == 0); return KeyMap[3][1]; } }
  43   1          
  44   1          // 扫描第三列（COL3=0）
  45   1          COL1 = 1; COL2 = 1; COL3 = 0; COL4 = 1;
  46   1          if (ROW1 == 0) { DelayMs(5); if (ROW1 == 0) { while (ROW1 == 0); return KeyMap[0][2]; } }
  47   1          if (ROW2 == 0) { DelayMs(5); if (ROW2 == 0) { while (ROW2 == 0); return KeyMap[1][2]; } }
  48   1          if (ROW3 == 0) { DelayMs(5); if (ROW3 == 0) { while (ROW3 == 0); return KeyMap[2][2]; } }
  49   1          if (ROW4 == 0) { DelayMs(5); if (ROW4 == 0) { while (ROW4 == 0); return KeyMap[3][2]; } }
  50   1          
  51   1          // 扫描第四列（COL4=0）
  52   1          COL1 = 1; COL2 = 1; COL3 = 1; COL4 = 0;
  53   1          if (ROW1 == 0) { DelayMs(5); if (ROW1 == 0) { while (ROW1 == 0); return KeyMap[0][3]; } }
  54   1          if (ROW2 == 0) { DelayMs(5); if (ROW2 == 0) { while (ROW2 == 0); return KeyMap[1][3]; } }
C51 COMPILER V9.54   MATRIXKEY                                                             10/12/2025 21:30:40 PAGE 2   

  55   1          if (ROW3 == 0) { DelayMs(5); if (ROW3 == 0) { while (ROW3 == 0); return KeyMap[2][3]; } }
  56   1          if (ROW4 == 0) { DelayMs(5); if (ROW4 == 0) { while (ROW4 == 0); return KeyMap[3][3]; } }
  57   1          
  58   1          return 0xFF; // 无按键按下
  59   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    387    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
